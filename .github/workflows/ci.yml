name: CI

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.sha }}
  cancel-in-progress: true

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}
  NEXT_PUBLIC_SITE_URL: ${{ secrets.NEXT_PUBLIC_SITE_URL }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  UPSTASH_REDIS_REST_URL: ${{ secrets.UPSTASH_REDIS_REST_URL }}
  UPSTASH_REDIS_REST_TOKEN: ${{ secrets.UPSTASH_REDIS_REST_TOKEN }}
  IP_ADDRESS_SALT: ${{ secrets.IP_ADDRESS_SALT }}
  BETTER_AUTH_SECRET: ${{ secrets.BETTER_AUTH_SECRET }}
  MOCK_SERVER: ${{ secrets.MOCK_SERVER }}
  GITHUB_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
  GITHUB_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run unit tests
        run: pnpm test:unit

  eslint:
    name: ESLint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build MDX
        run: pnpm build:mdx

      - name: Generate Next.js route types
        run: pnpm --filter web typegen

      - name: Run ESLint
        run: pnpm lint

  types:
    name: TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Generate Next.js route types
        run: pnpm --filter web typegen

      - name: Build MDX
        run: pnpm build:mdx

      - name: Run type check
        run: pnpm type-check

  prettier:
    name: Prettier
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run Prettier format check
        run: pnpm format:check

  spelling:
    name: Spelling
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run spelling check
        run: pnpm check:spelling

  knip:
    name: Knip
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build MDX
        run: pnpm build:mdx

      - name: Run Knip
        run: pnpm check:knip

  e2e:
    name: End-to-end tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [tests, eslint, types]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Setup Playwright
        run: pnpm playwright install --with-deps chromium --only-shell

      - name: Run services
        run: docker compose up -d

      - name: Migrate database
        run: pnpm db:migrate

      - name: Seed database
        run: pnpm db:seed

      - name: Run Playwright tests
        run: pnpm test:e2e

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 30

  lhci:
    name: Lighthouse CI
    runs-on: ubuntu-latest
    needs: [e2e]
    steps:
      - name: Checkout branch
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Run services
        run: docker compose up -d

      - name: Migrate database
        run: pnpm db:migrate

      - name: Seed database
        run: pnpm db:seed

      - name: Build web
        run: pnpm --filter web build

      - name: Run Lighthouse CI
        run: pnpm dlx @lhci/cli autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
